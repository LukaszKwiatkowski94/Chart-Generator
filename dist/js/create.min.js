"use strict";var labels=[],colors=[],values=[],ctxCreate=$("#createChart"),myChartCreate=new Chart(ctxCreate,{});$(".btn-add").click(function(){$(".chart__create-table").append($("<input></input>").addClass("chart__create-label").attr({type:"text"})).append($("<input></input>").addClass("chart__create-color").attr({type:"color"})).append($("<input></input>").addClass("chart__create-value").attr({type:"number"}).attr({value:0})),$("input").on("change keyup paste",function(){myChartCreate.destroy(),labels=[],colors=[],values=[],$(".chart__create-label").toArray().map(function(a){labels.push(a.value)}),$(".chart__create-color").toArray().map(function(a){colors.push(a.value)}),$(".chart__create-value").toArray().map(function(a){values.push(a.value)}),myChartCreate=new Chart(ctxCreate,{type:"bar",data:{labels:labels,datasets:[{data:values,backgroundColor:colors,borderColor:colors,borderWidth:1}]},options:{scales:{y:{beginAtZero:!0}}}})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZS5qcyJdLCJuYW1lcyI6WyJsYWJlbHMiLCJjb2xvcnMiLCIkIiwidmFsdWVzIiwiQ2hhcnQiLCJjdHhDcmVhdGUiLCJteUNoYXJ0Q3JlYXRlIiwiYXBwZW5kIiwidHlwZSIsImFkZENsYXNzIiwiYXR0ciIsInZhbHVlIiwib24iLCJkZXN0cm95IiwidG9BcnJheSIsInB1c2giLCJpdGVtIiwibWFwIiwiYmFja2dyb3VuZENvbG9yIiwib3B0aW9ucyIsInNjYWxlcyIsImJlZ2luQXRaZXJvIiwiZGF0YSIsImRhdGFzZXRzIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJXaWR0aCIsInkiXSwibWFwcGluZ3MiOiJhQUFBLElBQUlBLE9BQVMsR0FDVEMsT0FBUyxHQURURCxPQUFTLEdBQ1RDLFVBQUpDLEVBQUEsY0FBQSxFQUNJQyxjQUFKLElBQUFDLE1BQUFDLFVBQUEsRUFBQSxFQUVBSCxFQUFBLFVBQUEsRUFBSUksTUFBZ0IsV0FFbkJKLEVBQUMsc0JBQUEsRUFDQUssT0FFQ0wsRUFFU00saUJBQUFBLEVBSlhDLFNBT0cscUJBTEQsRUFPU0QsS0FBTSxDQUFBQSxLQUFBLE1BQUEsQ0FQZixDQUhGLEVBT0VELE9BTUFMLEVBR0VRLGlCQUhGLEVBR1NDLFNBQU8scUJBSGhCLEVBWkZELEtBaUJBLENBQUFGLEtBQUEsT0FBQSxDQUxFLENBYkYsRUFtQkNELE9BTkNMLEVBT0RJLGlCQUFBQSxFQUNBTixTQUFTLHFCQVJSLEVBU0RDLEtBQU0sQ0FBQU8sS0FBTixRQUFNLENBVEwsRUFVREwsS0FBTSxDQUFBUSxNQUFOLENBQU0sQ0FWTCxDQWJGLEVBbUJBVCxFQUFFLE9BQUQsRUFLQVUsR0FBQSxxQkFBQSxXQUpBTixjQVVFTyxRQVZGLEVBQ0FiLE9BWUVDLEdBWEZBLE9BUUEsR0FQQUUsT0FhRSxHQVpGRCxFQUFFLHNCQUFELEVBZ0JDWSxRQWhCRixFQWlCQVIsSUFBQUEsU0FBQUEsR0FkRU4sT0FlR2UsS0FBRUMsRUFEOEJMLEtBZG5DLENBQ0EsQ0FKRixFQU1BVCxFQUFFLHNCQUFELEVBQ0NZLFFBREYsRUFFRUcsSUFBSSxTQUFDRCxHQUNMZixPQWdCRWlCLEtBQUFBLEVBQUFBLEtBaEJGLENBQ0EsQ0FKRixFQU1BaEIsRUFBRSxzQkFBRCxFQUNDWSxRQURGLEVBRUVHLElBaUJERSxTQUFBQSxHQWhCQ2hCLE9BaUJBaUIsS0FBUUosRUFBQUwsS0FqQlIsQ0FDQSxDQUpGLEVBS0FMLGNBaUJJZSxJQUFBQSxNQUFhaEIsVUFBQSxDQWhCaEJHLEtBQU0sTUFDTmMsS0FhUyxDQVpSdEIsT0FXUUEsT0FkMkJ1QixTQUFyQyxDQXRCRCxDQTZCS0QsS0FBTW5CLE9BQ05lLGdCQUFpQmpCLE9BQ2pCdUIsWUFBYXZCLE9BQ2J3QixZQUFhLENBaENsQixFQXFDVyxFQURUTixRQUFTLENBQ1JDLE9BQVEsQ0FDUE0sRUFBRyxDQUNGTCxZQUFhLENBQUEsQ0FEWCxDQURJLENBREEsQ0FHTyxDQUFiQSxDQUtKLENBNUNELENBNkNBLENBbEVEIiwiZmlsZSI6ImNyZWF0ZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgbGFiZWxzID0gW107XHJcbmxldCBjb2xvcnMgPSBbXTtcclxubGV0IHZhbHVlcyA9IFtdO1xyXG5jb25zdCBjdHhDcmVhdGUgPSAkKFwiI2NyZWF0ZUNoYXJ0XCIpO1xyXG5sZXQgbXlDaGFydENyZWF0ZSA9IG5ldyBDaGFydChjdHhDcmVhdGUsIHt9KTtcclxuXHJcbiQoXCIuYnRuLWFkZFwiKS5jbGljaygoKSA9PiB7XHJcblx0JChcIi5jaGFydF9fY3JlYXRlLXRhYmxlXCIpXHJcblx0XHQuYXBwZW5kKFxyXG5cdFx0XHQkKFwiPGlucHV0PjwvaW5wdXQ+XCIpXHJcblx0XHRcdFx0LmFkZENsYXNzKFwiY2hhcnRfX2NyZWF0ZS1sYWJlbFwiKVxyXG5cdFx0XHRcdC5hdHRyKHsgdHlwZTogXCJ0ZXh0XCIgfSlcclxuXHRcdClcclxuXHRcdC5hcHBlbmQoXHJcblx0XHRcdCQoXCI8aW5wdXQ+PC9pbnB1dD5cIilcclxuXHRcdFx0XHQuYWRkQ2xhc3MoXCJjaGFydF9fY3JlYXRlLWNvbG9yXCIpXHJcblx0XHRcdFx0LmF0dHIoeyB0eXBlOiBcImNvbG9yXCIgfSlcclxuXHRcdClcclxuXHRcdC5hcHBlbmQoXHJcblx0XHRcdCQoXCI8aW5wdXQ+PC9pbnB1dD5cIilcclxuXHRcdFx0XHQuYWRkQ2xhc3MoXCJjaGFydF9fY3JlYXRlLXZhbHVlXCIpXHJcblx0XHRcdFx0LmF0dHIoeyB0eXBlOiBcIm51bWJlclwiIH0pXHJcblx0XHRcdFx0LmF0dHIoeyB2YWx1ZTogMCB9KVxyXG5cdFx0KTtcclxuXHQvLyAuY2hhcnRfX2NyZWF0ZS1sYWJlbFxyXG5cdCQoXCJpbnB1dFwiKS5vbihcImNoYW5nZSBrZXl1cCBwYXN0ZVwiLCAoKSA9PiB7XHJcblx0XHRteUNoYXJ0Q3JlYXRlLmRlc3Ryb3koKTtcclxuXHRcdGxhYmVscyA9IFtdO1xyXG5cdFx0Y29sb3JzID0gW107XHJcblx0XHR2YWx1ZXMgPSBbXTtcclxuXHRcdCQoXCIuY2hhcnRfX2NyZWF0ZS1sYWJlbFwiKVxyXG5cdFx0XHQudG9BcnJheSgpXHJcblx0XHRcdC5tYXAoKGl0ZW0pID0+IHtcclxuXHRcdFx0XHRsYWJlbHMucHVzaChpdGVtLnZhbHVlKTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0JChcIi5jaGFydF9fY3JlYXRlLWNvbG9yXCIpXHJcblx0XHRcdC50b0FycmF5KClcclxuXHRcdFx0Lm1hcCgoaXRlbSkgPT4ge1xyXG5cdFx0XHRcdGNvbG9ycy5wdXNoKGl0ZW0udmFsdWUpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHQkKFwiLmNoYXJ0X19jcmVhdGUtdmFsdWVcIilcclxuXHRcdFx0LnRvQXJyYXkoKVxyXG5cdFx0XHQubWFwKChpdGVtKSA9PiB7XHJcblx0XHRcdFx0dmFsdWVzLnB1c2goaXRlbS52YWx1ZSk7XHJcblx0XHRcdH0pO1xyXG5cdFx0bXlDaGFydENyZWF0ZSA9IG5ldyBDaGFydChjdHhDcmVhdGUsIHtcclxuXHRcdFx0dHlwZTogXCJiYXJcIixcclxuXHRcdFx0ZGF0YToge1xyXG5cdFx0XHRcdGxhYmVsczogbGFiZWxzLFxyXG5cdFx0XHRcdGRhdGFzZXRzOiBbXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdC8vIGxhYmVsOiAnIyBvZiBWb3RlcycsXHJcblx0XHRcdFx0XHRcdGRhdGE6IHZhbHVlcyxcclxuXHRcdFx0XHRcdFx0YmFja2dyb3VuZENvbG9yOiBjb2xvcnMsXHJcblx0XHRcdFx0XHRcdGJvcmRlckNvbG9yOiBjb2xvcnMsXHJcblx0XHRcdFx0XHRcdGJvcmRlcldpZHRoOiAxLFxyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRdLFxyXG5cdFx0XHR9LFxyXG5cdFx0XHRvcHRpb25zOiB7XHJcblx0XHRcdFx0c2NhbGVzOiB7XHJcblx0XHRcdFx0XHR5OiB7XHJcblx0XHRcdFx0XHRcdGJlZ2luQXRaZXJvOiB0cnVlLFxyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHR9LFxyXG5cdFx0fSk7XHJcblx0fSk7XHJcbn0pO1xyXG4iXX0=
